// time stamps everywhere (json, utc)


// sensor reading result
{
    "sensorID": "moisture1",
    "time": "2012-01-26T13:51:50.417-07:00",
    "type": "moisture",
    "moistureLevel": 330,
    "currentPollInterval": 5

}

// sensor reading request
{
    "sensorID": "temp-humid",
    "type": "temp",
    "time": "2012-01-26T13:51:50.417-07:00",
}


// change config request
{
    "target": "moisture1",
    "setting": "pollInterval",
    "data": 30,
    "time": "2012-01-26T13:51:50.417-07:00"
}

// config result
{
    "target": "moisture1",
    "result": true,
    "time": "2012-01-26T13:51:50.417-07:00"
}

// threshold violation
{
    "sensorID": "moisture2",
    "violationType": "moisture",
    "threshold": 330,
    "currentLevel": 300,
    "time": "2012-01-26T13:51:50.417-07:00"
}

// send email request
{
    "sensorID": "temp-humid",
    "violationType": "humidity",
    "threshold": 75,
    "reading": 80,
    "time": "2012-01-26T13:51:50.417-07:00"
}

// send email result
{
    "result": true,
    "time": "2012-01-26T13:51:50.417-07:00"
}

// data lookup request
{
    "metric": "moisture1",
    "numberOfReadings": 10,
    "time": "2012-01-26T13:51:50.417-07:00"
}

// data lookup response
{
    "metric": "moisture1",
    "result":[ { "moistureLevel": 330, "time": "2012-01-26T13:51:50.417-07:00" } , {}],
    "time": "2012-01-26T13:51:50.417-07:00"
}